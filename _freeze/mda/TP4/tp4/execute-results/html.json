{
  "hash": "1b17845b0c59230fd5197ae70c6024c0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'TP4 : arbres de partitionnement, cart'\nauthor: \"Martin Bari Garnier\"\ndate: \"2024-01-17\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"../data/train.dtf.Rdata\")\nload(\"../data/test.dtf.Rdata\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rpart)\nlibrary(rpart.plot)\n```\n:::\n\nCréation de jeux de données corrects\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#train.names <- sample(rownames(X), 2*nrow(X)/3, replace = FALSE)\n#test.names <- rownames(X)[-which(rownames(X) %in% train.names)]\n\n#res.sample <- PCA(X, scale.unit = TRUE, ind.sup = match(test.names, rownames(X)))\n#fviz_pca_biplot(res.sample, geom='point')\n\n#train.set <- X[train.names,]\n#test.set <- X[test.names,]\n\n#train.dtf <- cbind(train.set, Y[train.names,])\n#test.dtf <- cbind(test.set, Y[test.names,])\n\n#save(train.dtf, file = \"../data/train.dtf.Rdata\")\n#save(test.dtf, file = \"../data/test.dtf.Rdata\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_drugg <- train.dtf[, -which(colnames(train.dtf) == \"score\")]\ntest_drugg <- test.dtf[, -which(colnames(test.dtf) == \"score\")]\n\nFit <- rpart(drugg~., data = train_drugg, control = rpart.control(minsplit = 1))\nrpart.plot(Fit, extra = 2)\n```\n\n::: {.cell-output-display}\n![](tp4_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: ggplot2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: lattice\n```\n\n\n:::\n\n```{.r .cell-code}\n# Train set\nfit_predict_train <- predict(Fit, newdata = train_drugg)\nconf_train_fit <- confusionMatrix(as.factor(round(fit_predict_train[, 2])),\n                               as.factor(train_drugg$drugg))\n# Test set\nfit_predict_test <- predict(Fit, newdata = test_drugg)\nconf_test_fit <- confusionMatrix(as.factor(round(fit_predict_test[, 2])),\n                               as.factor(test_drugg$drugg))\n# Plot\nplotcp(Fit)\n```\n\n::: {.cell-output-display}\n![](tp4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNess <- prune(Fit, cp = 0.057)\nrpart.plot(Ness)\n```\n\n::: {.cell-output-display}\n![](tp4_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Train set\nness_predict_train <- predict(Ness, newdata = train_drugg)\nconf_train_ness <- confusionMatrix(as.factor(round(ness_predict_train[, 2])),\n                               as.factor(train_drugg$drugg))\n\n# Test set\nness_predict_test <- predict(Ness, newdata = test_drugg)\nconf_test_ness <- confusionMatrix(as.factor(round(ness_predict_test[, 2])),\n                               as.factor(test_drugg$drugg))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nconf_train_fit$overall[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAccuracy \n       1 \n```\n\n\n:::\n\n```{.r .cell-code}\nconf_test_fit$overall[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Accuracy \n0.7027027 \n```\n\n\n:::\n\n```{.r .cell-code}\nconf_train_ness$overall[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Accuracy \n0.9305556 \n```\n\n\n:::\n\n```{.r .cell-code}\nconf_test_ness$overall[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Accuracy \n0.7027027 \n```\n\n\n:::\n\n```{.r .cell-code}\ndf_acc <- data.frame(\n  train_fit = conf_train_fit$overall[1],\n  test_fit = conf_test_fit$overall[1],\n  train_ness = conf_train_ness$overall[1],\n  test_ness = conf_test_ness$overall[1]\n)\n\ndf_acc <- t(df_acc)\ndf_acc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Accuracy\ntrain_fit  1.0000000\ntest_fit   0.7027027\ntrain_ness 0.9305556\ntest_ness  0.7027027\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_score <- train.dtf[, -which(colnames(train.dtf) == \"drugg\")]\ntest_score <- test.dtf[, -which(colnames(test.dtf) == \"drugg\")]\n\nFit <- rpart(score~., data = train_score, control = rpart.control(minsplit = 2))\nrpart.plot(Fit)\n```\n\n::: {.cell-output-display}\n![](tp4_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\n\n# Train set\nfit_spred_train <- predict(Fit, newdata = train_score)\nsperf_train_fit <- postResample(fit_spred_train, train_score$score)\n\n# Test set\nfit_spred_test <- predict(Fit, newdata = test_score)\nsperf_test_fit <- postResample(fit_spred_test, test_score$score)\n\n# Plot\nplotcp(Fit)\n```\n\n::: {.cell-output-display}\n![](tp4_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNess <- prune(Fit, cp = 0.042)\nrpart.plot(Ness)\n```\n\n::: {.cell-output-display}\n![](tp4_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Train set\nness_spred_train <- predict(Ness, newdata = train_drugg)\nsperf_train_ness <- postResample(ness_spred_train, train_score$score)\n\n# Test set\nness_spred_test <- predict(Ness, newdata = test_drugg)\nsperf_test_ness <- postResample(ness_spred_test, test_score$score)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a dataframe\nresults_df <- data.frame(\n  RMSE = c(41.3386484, 50.6410931, 46.5379404, 50.6410931),\n  Rsquared = c(0.9229773, 0.9299857, 0.9023842, 0.9299857),\n  MAE = c(33.3168518, 39.2805625, 37.7836200, 39.2805625),\n  row.names = c(\"train_original\", \"test_original\", \"train_pruned\", \"test_pruned\")\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"hello world!\")\n```\n:::\n",
    "supporting": [
      "tp4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}